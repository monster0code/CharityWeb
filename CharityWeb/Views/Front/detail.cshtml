@{
    Layout = null;
}
@using Microsoft.AspNet.Identity
@model CharityWeb.Models.NursingHome

<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>nursing home detail</title>
    <link rel="stylesheet" href="/Content/static/css/styles.css">
@*    <script src="https://code.jquery.com/jquery-3.7.1.min.js"
            integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
            crossorigin="anonymous">
    </script>*@
    <script src="https://cdn.userway.org/widget.js" data-account="GwdxhRRYt4"></script>
    <script src="https://api.map.baidu.com/api?v=3.0&ak=u4DrOhWuNvTNNLQLWQ0tbNkfMSWtj1zr"></script>
    <!-- FullCalendar CSS -->
    <link href="/Content/fullcalendar.css" rel="stylesheet" />
    <!-- jQuery -->
    <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>-->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"
            integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
            crossorigin="anonymous">
    </script>
    <!-- Moment.js -->
    <script src="/Scripts/moment.js"></script>
    <!-- FullCalendar JS -->
    <script src="/Scripts/fullcalendar.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
        }

        #BaiduMap {
            width: 800px;
            height: 500px;
            margin: 0 auto;
            /* 使用 margin: 0 auto; 实现水平居中 */
            border: 1px solid #ccc;
        }

        .header {
            background-color: #333;
            color: #fff;
            padding: 20px;
            text-align: center;
        }

        .banner {
            background-image: url('/Content/static/pic/095824411.png');
            /* 替换为你的背景图片路径 */
            background-size: cover;
            background-position: center;
            padding: 50px 0;
            text-align: center;
            color: #fff;
            position: relative;
            z-index: 0;
        }

            .banner::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.3);
                /* 灰色阴影效果，调整透明度 */
                z-index: 1;
            }

            .banner::after {
                content: '';
                position: absolute;
                bottom: 0;
                /* 调整位置使波浪形效果显示在搜索过滤器上方 */
                left: 0;
                width: 100%;
                height: 20px;
                /* 根据需要调整高度 */
                background-image: url('https://www.qckyly.com/static/pc/images/svgs/page-header-curv-dark-1-1.svg');
                /* 替换为你的波浪形图片路径 */
                background-size: cover;
                background-repeat: no-repeat;
                z-index: 1;
            }

            .banner h1,
            .banner p {
                position: relative;
                z-index: 2;
            }

            .banner h1 {
                font-size: 36px;
                margin: 0;
            }

            .banner p {
                font-size: 18px;
                margin: 10px 0 0;
            }

        .content {
            padding: 20px;
        }

        .details {
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            background-color: #fff;
            padding: 20px;
            margin-top: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 1200px;
            margin: 20px auto;
        }

            .details img {
                max-width: 50%;
                height: auto;
                border-radius: 10px;
            }

        .details-info {
            max-width: 45%;
            text-align: left;
            margin-left: 100px;
            /* Add margin to ensure some space */
            flex-grow: 1;
            /* Ensure the text takes the remaining space */
        }

            .details-info h2 {
                margin-bottom: 20px;
            }

        .price {
            color: red;
            font-size: 24px;
            font-weight: bold;
        }

        .features {
            list-style: none;
            padding: 0;
        }

            .features li {
                margin: 10px 0;
            }

                .features li img {
                    width: 30px;
                    /* Adjust the width as needed */
                    height: 30px;
                    /* Adjust the height as needed */
                    margin-right: 10px;
                    /* Space between the icon and text */
                    vertical-align: middle;
                    /* Align icons with text */
                }

        .feature-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

            .feature-item span {
                margin-left: 10px;
            }

        .description {
            background-color: #fff;
            padding: 20px;
            margin-top: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 1200px;
            margin: 20px auto;
        }

        .registration-button {
            display: inline-block;
            margin: 0 auto;
            padding: 10px 20px;
            font-size: 16px;
            background-color: #4CAF50;
            /* Green */
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }

            .registration-button:hover {
                background-color: #45a049;
            }


        .feedback-modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
            padding-top: 60px;
        }

        .feedback-modal-content {
            background-color: #fff;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 30%;
            box-shadow: 0 0 10px rgba(0,0,0,0.25);
            border-radius: 10px;
            position: relative;
        }

        .feedback-modal-close {
            color: #aaa;
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
        }

            .feedback-modal-close:hover,
            .feedback-modal-close:focus {
                color: black;
                text-decoration: none;
            }

        /* 表单组样式 */
        .form-group {
            margin-bottom: 15px;
        }

            .form-group label {
                display: block;
                font-weight: bold;
                margin-bottom: 5px;
            }

            .form-group input[type="text"],
            .form-group input[type="date"] {
                width: calc(100% - 20px); /* 留出 padding 的空间 */
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                box-sizing: border-box; /* 包含 padding 和 border 在内的总宽度 */
            }

        .feedback-button-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 100px;
            height: 40px;
            border: none;
            background-color: orange;
            color: white;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
            font-size: 14px;
            cursor: pointer;
            border-radius: 5px;
        }

        .btn-submit {
            background-color: #FFA500; /* 橙色背景 */
            color: white; /* 白色文字 */
            border: none; /* 去掉边框 */
            padding: 10px 20px; /* 内边距 */
            font-size: 16px; /* 字体大小 */
            cursor: pointer; /* 鼠标指针 */
        }

            .btn-submit:hover {
                background-color: #e69500; /* 悬停时背景颜色变深 */
            }

        .btn-cancel {
            background-color: #d3d3d3; /* 灰色背景 */
            color: black; /* 黑色文字 */
            border: none; /* 去掉边框 */
            padding: 10px 20px; /* 内边距 */
            font-size: 16px; /* 字体大小 */
            cursor: pointer; /* 鼠标指针 */
        }

            .btn-cancel:hover {
                background-color: #c0c0c0; /* 悬停时背景颜色变深 */
            }

        #calendar {
            width: 50%; /* 调整宽度大小 */
            height: 300px; /* 调整高度大小 */
            margin: 0 auto; /* 使其水平居中 */
            padding: 20px; /* 可选：添加一些内边距 */
        }
    </style>
</head>

<body>
    <header>
        <div class="top-bar-wrapper">
            <div class="top-bar">
                <div class="webname">
                    <img src="~/Content/static/icon/service.png" alt="icon" class="webname-icon">
                    <a href="@Url.Action("index", "Home")" style="color: white; text-decoration: none;">ElderlyCare Hub</a>
                </div>
                <div class="contact">
                    @if (Request.IsAuthenticated)
                    {
                        using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="contact">
                                <span style="margin-right: 10px">
                                    @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage", @class = "nav-link" })
                                </span>
                                <span><a class="nav-link" href="javascript:document.getElementById('logoutForm').submit()">Log off</a></span>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="contact">
                            <span>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", @class = "nav-link" })</span>
                        </div>
                    }
                </div>
            </div>
        </div>
        <nav>
            <a href="@Url.Action("index", "Front")">Index</a>
            <a href="@Url.Action("place", "Front")">Nursing home</a>
            <a href="@Url.Action("activitylist", "Front")">Activity</a>
            <a href="@Url.Action("Index", "NursingAppointmentModels")">My appointment</a>
        </nav>
    </header>

    <div class="banner">
        <h1>Nursing home Details</h1>
        <p>Index > Nursing home > Detail</p>
    </div>

    <div class="content">
        <div class="details">
            <img src="@Model.ImageUrl" alt="@Model.Name">
            <div class="details-info">
                <h2>@Model.Name</h2>
                <p class="price">@Model.Price/month</p>
                <ul class="features">
                    <li style="color: #777;">Prices are for reference only</li>
                    <li><img src="~/Content/static/icon/phone.png" alt="icon"> Phone: 0412345678</li>
                    <li><img src="/Content/static/icon/person.png" alt="icon"> Max people: unlimited</li>
                    <li><img src="/Content/static/icon/location.png" alt="icon"> Location: @Model.Location</li>
                </ul>
                <!-- <a href="#" class="registration-button disabled">已结束</a> -->
                <button class="registration-button abled" id="feedbackButton" style="margin-top: 20px">Appointment</button>
            </div>
        </div>
    </div>

    <div id='calendar'></div>

    <!-- Baidu Map -->
    <h2 style="text-align: center; margin-top: 500px;">path planning</h2>
    <div id="BaiduMap"></div>

    <script>
        var map = new BMap.Map("BaiduMap");
        var geolocationControl = new BMap.GeolocationControl();
        map.addControl(geolocationControl);

        // 初始化地图
        var point = new BMap.Point(116.331398, 39.897445);
        map.centerAndZoom(point, 12);
        map.enableScrollWheelZoom(true);

        // 监听定位成功事件
        geolocationControl.addEventListener('locationSuccess', function (e) {
            var currentAddress = ''; // 初始化当前位置的具体地址

            // 获取定位到的当前位置的经纬度坐标
            var currentPoint = e.point;

            // 创建地理编码实例
            var geoc = new BMap.Geocoder();

            // 将定位到的坐标转换为具体地址
            geoc.getLocation(currentPoint, function (rs) {
                var addComp = rs.addressComponents;
                currentAddress = addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber;

                // 弹出提示框显示当前位置具体地址
                alert('Your location：' + currentAddress);

                // 假设目标地址是上海市浦东新区的具体位置（例如：上海市浦东新区张江高科技园区）
                var targetAddress = "@Model.Location";

                // 使用地理编码服务将目标地址转换为经纬度坐标
                geoc.getPoint(targetAddress, function (point) {
                    if (point) {
                        // 创建路径规划实例
                        var driving = new BMap.DrivingRoute(map, {
                            renderOptions: {
                                map: map,
                                autoViewport: true
                            }
                        });

                        // 执行路径规划
                        driving.search(currentPoint, point);
                    } else {
                        alert('您选择地址没有解析到结果！');
                    }
                }, '上海市'); // 指定城市为上海市
            });
        });

        // 监听定位失败事件
        geolocationControl.addEventListener('locationError', function (e) {
            alert('定位失败：' + e.message);
        });
    </script>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div id="feedback-modal" class="feedback-modal">
            <div class="feedback-modal-content">
                <span class="feedback-modal-close">&times;</span>
                <h4>Select an appointment time</h4>
                <hr />

                <div class="form-group">
                    <label for="activity">Select Nursing home ID:</label>
                    <input type="text" id="activity" value="@Model.ID" readonly>
                </div>

                <div class="form-group">
                    <label for="Username">Your Username:</label>
                    <input type="text" id="Username" value="@User.Identity.GetUserName()" readonly>
                </div>

                @*                <div class="form-group">
                        <input type="date" id="appointment-date" value="2024-07-28">
                    </div>*@
                <!-- 日期选择器 -->
                <div class="form-group">
                    <label for="appointment-date">Select Appointment Date:</label>
                    <input type="text" id="appointment-date" name="Date">
                </div>

                <div class="form-group" style="margin-top: 20px">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-submit" onclick="MakeAppointment()" />
                        <button type="button" class="btn btn-cancel" onclick="closeFeedbackModal()">Cancel</button>
                    </div>
                </div>

            </div>
        </div>
    }
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    @*<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>*@
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>


    <script>
    $(document).ready(function() {
        var activityId = "@Model.ID";

        // 使用 AJAX 请求获取当前用户已预约的日期列表
        $.ajax({
            url: "/NursingAppointmentModels/GetUserAppointments",
            type: "GET",
            data: { activityId: activityId },
            success: function(response) {
                var reservedDates = response;

                // 初始化日期选择器
                $("#appointment-date").datepicker({
                    dateFormat: "yy-mm-dd",
                    beforeShowDay: function(date) {
                        var stringDate = $.datepicker.formatDate("yy-mm-dd", date);
                        return [reservedDates.indexOf(stringDate) === -1];
                    }
                });
            },
            error: function(error) {
                console.log("Error fetching user appointments:", error);
            }
        });
    });
    </script>

    <script>

        var feedbackModal = document.getElementById("feedback-modal");
        var feedbackBtn = document.getElementById("feedbackButton");
        var feedbackSpan = document.getElementsByClassName("feedback-modal-close")[0];

        feedbackBtn.onclick = function () {
            feedbackModal.style.display = "block";
        }

        feedbackSpan.onclick = function () {
            feedbackModal.style.display = "none";
        }

        window.onclick = function (event) {
            if (event.target == feedbackModal) {
                feedbackModal.style.display = "none";
            }
        }

        function closeFeedbackModal() {
            feedbackModal.style.display = "none";
        }

        function MakeAppointment() {

            // Get the data from the input field.
            const HomeId = document.getElementById("activity").value;
            const UserName = document.getElementById("Username").value;
            const AppointmentDate = document.getElementById("appointment-date").value;

            if (!UserName) {
                alert("please login first");
                return;
            }

            var regex = /^\d{4}-\d{2}-\d{2}$/;
            if (!isValidDate(AppointmentDate)) {
                alert("Your date format is invalid.");
                return;
            }

            // 检查是否选择了日期
            if (!AppointmentDate) {
                alert("Please select an appointment date.");
                return;
            }

            var data = {
                UserName: UserName,
                HomeId: HomeId,
                Date: AppointmentDate
            };

            // Make a POST request to the controller action with the data.
            $.ajax({
                url: "/NursingAppointmentModels/CreateAppointment",
                type: "POST",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                async: false,
                success: function (response) {
                    // Handle the response from the server
                    if (response = "Success") {
                        alert("UserName[" + UserName + "] had made an appointment on " + AppointmentDate + " for " + "HomeId[" + HomeId + "].");
                    }
                    else {
                        alert(response.statusText);
                    }
                },
                error: function (error) {
                    // Handle any errors from the server.
                    alert(error.statusText);
                }
            });
        }
        function isValidDate(dateString) {
            var date = new Date(dateString);

            // 判断日期对象是否有效，且输入的字符串与解析后的日期字符串是否一致
            return !isNaN(date.getTime()) && date.toISOString().slice(0, 10) === dateString;
        }
    </script>
    <footer class="footer">
        <div class="footer-links">
            <a href="#">About us</a>
            <a href="#">Contact us</a>
            <a href="#">Privacy policy</a>
            <a href="#">Services</a>
            <a href="#">Business cooperation</a>
        </div>

        <div class="footer-copyright" style="margin-top: 15px">
            @DateTime.Now.Year - My ElderlyCare Hub
        </div>
    </footer>

    <script>
         var activityId = "@Model.ID";
        $(document).ready(function () {
            $('#calendar').fullCalendar({
                // 定义事件加载的回调函数
                displayEventTime: false, // 不显示事件的时间
                dayClick: function (date, jsEvent, view) {
                    // 在这里执行你希望执行的操作
                    // alert('You clicked on ' + date.format());
                    // 显示 confirm 对话框
                    var userConfirmed = confirm("Do you want to make an appointment on " + date.format());

                    // 根据用户点击的按钮执行相应的操作
                    if (userConfirmed) {
                        MakeAppointment(date.format());
                        location.reload();
                    } else {
                        console.log("date");
                    }
                },
                eventRender: function (event, element) {
                    // 保存原始的开始和结束日期
                    event.originalStart = event.start.clone();
                    if (event.end) {
                        event.originalEnd = event.end.clone();
                    }
                },
                eventDrop: function (event, delta, revertFunc) {
                    // 确认用户是否真的要更改日期
                    if (!confirm("Are you sure about this change?")) {
                        revertFunc();  // 如果用户取消，恢复原来的日期
                    } else {
                        // 发送 AJAX 请求，将新的日期发送到服务器
                        $.ajax({
                            url: '/NursingAppointmentModels/UpdateAppointmentDate',  // 更改为实际的控制器路径
                            type: 'POST',
                            data: {
                                id: activityId,  // 事件的 ID，用于标识预约
                                newDate: event.start.format(),  // 新的日期
                                oldDate: event.originalStart.format("YYYY-MM-DD")
                            },
                            success: function (response) {
                                if (response.success) {
                                    alert("Appointment updated successfully!");
                                } else {
                                    alert("Failed to update the appointment.");
                                    revertFunc();  // 如果更新失败，恢复原来的日期
                                }
                            },
                            error: function () {
                                alert("Error updating the appointment.");
                                revertFunc();  // 如果请求失败，恢复原来的日期
                            }
                        });
                        console.log(event.originalStart.format("YYYY-MM-DD"));
                    }
                },
                events: function (start, end, timezone, callback) {
                    $.ajax({
                        url: '/NursingAppointmentModels/GetUserCalendarAppointments',
                        type: 'GET',
                        data: { activityId: activityId },
                        dataType: 'json',
                        success: function (data) {
                            callback(data);
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching events:', error);
                        }
                    });
                },
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                editable: true,
                droppable: false
            });
        });

        function MakeAppointment(AppointmentDate) {

            // Get the data from the input field.
            const HomeId = document.getElementById("activity").value;
            const UserName = document.getElementById("Username").value;

            if (!UserName) {
                alert("please login first");
                return;
            }

            var regex = /^\d{4}-\d{2}-\d{2}$/;
            if (!isValidDate(AppointmentDate)) {
                alert("Your date format is invalid.");
                return;
            }

            // 检查是否选择了日期
            if (!AppointmentDate) {
                alert("Please select an appointment date.");
                return;
            }

            var data = {
                UserName: UserName,
                HomeId: HomeId,
                Date: AppointmentDate
            };

            // Make a POST request to the controller action with the data.
            $.ajax({
                url: "/NursingAppointmentModels/CreateAppointment",
                type: "POST",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                async: false,
                success: function (response) {
                    // Handle the response from the server
                    if (response = "Success") {
                        alert("UserName[" + UserName + "] had made an appointment on " + AppointmentDate + " for " + "HomeId[" + HomeId + "].");
                    }
                    else {
                        alert(response.statusText);
                    }
                },
                error: function (error) {
                    // Handle any errors from the server.
                    alert(error.statusText);
                }
            });
        }
    </script>
</body>

</html>